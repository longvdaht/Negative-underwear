{%- liquid 
  assign currentVariant = product.selected_or_first_available_variant
  unless product.selected_variant.id
    if currentVariant.title contains '-Pack' and currentVariant.available
      for variant in product.variants
        if variant.title contains 'Single' and variant.available
          assign currentVariant = variant
          break
        endif
      endfor
    endif
  endunless

  assign has_single_available = false
  assign no_single_variant = false
  assign variantAvailable = product.variants | where: 'available', true
  for variant in variantAvailable
    if variant.title contains 'Single'
      assign has_single_available = true
      break
    elsif variant.title contains '-Pack'
      assign has_single_available = false
    else
      assign no_single_variant = true
    endif
  endfor
  assign quantity_option = product.options_by_name['Quantity'].values.size
  unless quantity_option <= 1
    unless no_single_variant
      unless has_single_available
        assign currentVariant = product.variants[0]
      endunless
    endunless
  endunless
-%}

{% assign productTitle = product.title | split: " in " | first %}
{% assign productColor = product.title | remove: productTitle | remove_first: " in " | replace: " and in ", " and " | remove: ' - Final Sale' %}

{% assign dynamicLimitColors = product.metafields.custom.limited_edition.value | remove: " " | replace: ',', '|' %}

{% assign limitColors = "|" | append: dynamicLimitColors | append: "|" %}


{% assign hasPlusSizing = false %}
{% assign hasPacks = false %}
{% assign sayComingSoon = false %}
{% assign hasSet = false %}
{% assign isWarehouseSale = false %}
{% assign newColorSoon = false %}
{% assign potentialNewColor = '' %}
{% assign hasHighlight = false %}
{% assign sizechart = '' %}
{% assign productType = "null" %}
{% assign isFinalSale = false %}
{% assign isCreditRefundOnly = false %}
{% assign isRestock = false %}
{% assign showTshirtCircle = false %}
{% assign showHolidayCircle = false %}
{% assign showValentinesCircle = false %}
{% assign showJenniCircle = false %}
{% assign restockText = "" %}
{% if product.first_available_variant.title contains "Pack" or product.title contains "Pack" %}
  {% assign showSaleSticker = false %}
{% else %}
  {% assign showSaleSticker = true %}
{% endif %}
{% if product.type == "Swim" or product.type == "swim" %}
  {% assign productType = "swim" %}
{% endif %}

{% liquid                     
  if product.vendor contains "Last Chance"
    assign isLastChance = true
  else
    assign isLastChance = false 
  endif
%}
{% for tag in product.tags %}
  {% assign t = tag | handleize %}

  {% if t == "coming-soon" %}
    {% assign sayComingSoon = true %}
  {% endif %}
  {% if t contains "-set" %}
    {% assign hasSet = true %}
    {% assign setHandle = t %}
  {% endif %}
  {% if t contains "packlink" %}
    {% assign hasPacklink = true %}
  {% endif %}
  {% if t == "warehouse-sale" and product.compare_at_price_max > product.price_min %}
    {% assign isWarehouseSale = true %}
  {% endif %}
  {% if t == "plus-bra-sizing" %}
    {% assign hasPlusSizing = true %}
  {% endif %}
  {% if t == "show-tshirt-circle" %}
    {% assign showTshirtCircle = true %}
  {% endif %}
  {% if t == "show-holiday-circle" %}
    {% assign showHolidayCircle = true %}
  {% endif %}
  {% if t == "show-valentines-circle" %}
    {% assign showValentinesCircle = true %}
  {% endif %}
  {% if t == "show-jenni-circle" %}
    {% assign showJenniCircle = true %}
  {% endif %}
  {% if t == "show-sale-sticker" %}
    {% assign showSaleSticker = true %}
  {% endif %}

  {% if t contains "highlight" %}
    {% assign hasHighlight = true %}
    {% capture imgName %}{{ t }}.png{% endcapture %}
    <img src="{{ imgName | asset_url }}" alt="{{ tag | remove: 'highlight ' }}" />
  {% endif %}
  {% if tag contains "soon-" %}
    {% assign newColorSoon = tag | split: 'soon-' | last %}
  {% endif %}
  {% if t contains "newcolor-" %}
    {% if t contains 'black-marble' %}
      {% assign newcolor = "newcolor-" | append: 'black-marble' %}
    {% elsif t contains 'peach-black' %}
      {% assign newcolor = "newcolor-" | append: 'peach-blacktrim' %}
    {% elsif t contains 'buff-black' %}
      {% assign newcolor = "newcolor-" | append: 'buff-blacktrim' %}
    {% elsif t contains 'buff-white' %}
      {% assign newcolor = "newcolor-" | append: 'buff-whitetrim' %}
    {% elsif t contains 'coral-white' %}
      {% assign newcolor = "newcolor-" | append: 'coral-wht' %}
    {% elsif t contains 'heather-grey-white' %}
      {% assign newcolor = "newcolor-" | append: 'heather-grey-wht' %}
    {% elsif t contains 'haze-black' %}
      {% assign newcolor = "newcolor-" | append: 'haze-blacktrim' %}
    {% elsif t contains 'navy-white' %}
      {% assign newcolor = "newcolor-" | append: 'navy-wht' %}
    {% elsif t contains 'peach-moire' %}
      {% assign newcolor = "newcolor-" | append: 'peach-moire' %}
    {% elsif t contains 'slate-moire' %}
      {% assign newcolor = "newcolor-" | append: 'slate-moire' %}
    {% elsif t contains 'black-essaouira' %}
      {% assign newcolor = "newcolor-" | append: 'black-essaouira' %}
    {% elsif t contains 'white-essaouira' %}
      {% assign newcolor = "newcolor-" | append: 'white-essaouira' %}
    {% elsif t contains 'lilac-essaouira' %}
      {% assign newcolor = "newcolor-" | append: 'lilac-essaouira' %}
    {% elsif t contains 'buff-essaouira' %}
      {% assign newcolor = "newcolor-" | append: 'buff-essaouira' %}
    {% else %}
      {% assign newcolor = t %}
    {% endif %}

    {% assign potentialNewColor = potentialNewColor | append: newcolor | append: '--' %}
  {% endif %}

  {% if t == "final-sale" %}
    {% assign isFinalSale = true %}
  {% elsif t == "credit-refund-only" %}
    {% assign isCreditRefundOnly = true %}
  {% endif %}
  {% if t == "bras" or t == "non-wire-bra" %}
    {% assign productType = "bra" %}
  {% endif %}
  {% if t == "sleepwear-bottom" %}
    {% assign productType = "sleepwear-bottom" %}
  {% endif %}
  {% if t == "sweat-bottom" %}
    {% assign productType = "sweat-bottom" %}
  {% endif %}
  {% if t == "swim-top" %}
    {% assign productType = "swim-top" %}
  {% endif %}
  {% if t == "swim-bottom" %}
    {% assign productType = "swim-bottom" %}
  {% endif %}
  {% if t == "sweat-top" %}
    {% assign productType = "sweat-top" %}
  {% endif %}
  {% if t == "sleepwear-top" %}
    {% assign productType = "sleepwear-top" %}
    {% comment %}
    <!-- % break % -->
    <!-- since this seems to go alphabetically, stop checking so we don't override with tops - - - SWITCHED 2/8/21, may need to revisit -->
    {% endcomment %}
  {% endif %}
  {% if t == "tops" %}
    {% if product.title contains "Crew" %}
      {% assign productType = "sweat-top" %}
    {% elsif product.title contains "Bra Top" %}
      {% assign productType = "bra" %}
    {% else %}
      {% assign productType = "top" %}
    {% endif %}
  {% endif %}
  {% if t == "underwear" or t == "thongs" or product.title contains "Thong" or t contains "briefs" or t == "bike-short" or product.type == "Underwear" %}
    {% assign productType = "underwear" %}
  {% endif %}
  {% if t contains "sizechart" %}
    {% assign sizechart = t | split: 'sizechart-' | last %}
  {% endif %}
  {% if t contains "restock" %}
    {% assign isRestock = true %}
    {% assign restockText = tag | split: "estock" | last %}
  {% endif %}
{% endfor %}
{% if product.title contains "Bodysuit" %}
  {% assign productType = "bodysuit" %}
{% elsif product.title contains "Robe" %}
  {% assign productType = "robe" %}
{% endif %}

{% assign productQty = 0 %}
{% for variant in product.variants %}
  {% unless product.title contains "(Pack)" %}
    {% if variant.title contains "-Pack" %}
      {% assign hasPacks = true %}
    {% endif %}
  {% endunless %}
  {% assign productQty = productQty | plus: variant.inventory_quantity %}
{% endfor %}
{% assign productFamily = productTitle | handleize | remove: '-0' %}
{% if product.title contains "Pack" %}
  {% assign productFamily = productFamily | append: '-pack' %}
{% endif %}

{% assign testArticleURL = 'size-charts/' | append: sizechart %}
{% assign testArticle = articles[testArticleURL] %}

{% if testArticle.created_at == blank %}
  <!-- there is no post! use image like before -->
  {% assign sizeChartStyle = "image" %}
{% else %}
  {% assign sizeChartArticle = testArticle %}
  {% assign sizeChartStyle = "html" %}  
  <!--    FOUND IT (we gots a post) -->
  {% assign sizechartHtml = sizeChartArticle.content %}
{% endif %}
<section
  id="MainProduct-{{ section.id }}"
  class="page-width section-{{ section.id }}-padding"
  data-section="{{ section.id }}"
>
  {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }

  {%- endstyle -%}

  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  {%- comment -%}
    <script src="{{ 'size_quiz.js' | asset_url }}" defer="defer"></script>
  {%- endcomment -%}
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  <script id="EnableZoomOnHover-main" src="{{ 'magnify.js' | asset_url }}" defer="defer"></script>
  {%- if request.design_mode -%}
    <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id="ModelViewerStyle"
      rel="stylesheet"
      href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
      media="print"
      onload="this.media='all'"
    >
    <link
      id="ModelViewerOverride"
      rel="stylesheet"
      href="{{ 'component-model-viewer-ui.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
  {%- endif -%}

  {% assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' %}

  <div class="product js-product-page product--large product--{{ section.settings.media_position }} product--{{ section.settings.gallery_layout }} product--mobile-hide grid {% if product.media.size < 1 %}product--no-media{% endif %}">
    <div class="grid__item product__media-wrapper{% if section.settings.media_position == 'right' %} medium-hide large-up-hide{% endif %}">
      {% render 'product-media-gallery', variant_images: variant_images, hasPacks: hasPacks, showTshirtCircle: showTshirtCircle, showHolidayCircle: showHolidayCircle, showJenniCircle: showJenniCircle, showValentinesCircle: showValentinesCircle %}
    </div>
    <div class="product__info-wrapper {% if hasPacks %} has-packs{% endif %} grid__item">
      <product-info
        id="ProductInfo-{{ section.id }}"
        data-section="{{ section.id }}"
        data-url="{{ product.url }}"
        class="product__info-container product__column-sticky"
      >
        {%- assign product_form_id = 'product-form-' | append: section.id -%}

        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when '@app' -%}
              {% render block %}
            {%- when 'text' -%}
              <p
                class="product__text inline-richtext{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}"
                {{ block.shopify_attributes }}
              >
                {{- block.settings.text -}}
              </p>
            {%- when 'title' -%}
              <div class="product__title" {{ block.shopify_attributes }}>
                <h1 class="product-single__title small--text-center" itemprop="name" data-fulltitle="{{ product.title }}">{{ productTitle }}<span class="visually-hidden"> in {{ productColor }}</span></h1>
                <a href="{{ product.url }}" class="product__title">
                  <h2 class="h1">
                   {{ productTitle }}
                  </h2>
                </a>
              </div>
              {% assign trigger_tag_1 = settings.pdp_tags_trigger_1 %}
              {% assign trigger_tag_2 = settings.pdp_tags_trigger_2 %}

              {% for tag in product.tags %}
                {% if tag contains trigger_tag_1 %}
                  <div class="custom-message-container">
                    <div class="custom-text-box" style="color: {{ settings.pdp_text_color_1 }};">
                      {{ settings.pdp_message_display_1 }}
                      <button class="question-icon" style="color: {{ settings.pdp_text_color_1 }}; border-color: {{ settings.pdp_text_color_1 }};" onclick="togglePopup('popup-content-1', 'popup-content-2')">?</button>
                    </div>
                    <div class="popup-content" id="popup-content-1" style="display:none;">
                      <button class="custom-closing-icon" onclick="togglePopup('popup-content-1', 'popup-content-2')">
                        <span class="icon icon-x" aria-hidden="true"><span class="hide">Close</span></span>
                      </button>
                      {{ settings.pdp_popup_content_1 | richtext }}
                    </div>
                  </div>
                {% endif %}
                {% if tag contains trigger_tag_2 %}
                  <div class="custom-message-container">
                    <div class="custom-text-box" style="color: {{ settings.pdp_text_color_2 }};">
                      {{ settings.pdp_message_display_2 }}
                      <button class="question-icon" style="color: {{ settings.pdp_text_color_2 }}; border-color: {{ settings.pdp_text_color_2 }};" onclick="togglePopup('popup-content-2', 'popup-content-1')">?</button>
                    </div>
                    <div class="popup-content" id="popup-content-2" style="display:none;">
                      <button class="custom-closing-icon" onclick="togglePopup('popup-content-2', 'popup-content-1')">
                        <span class="icon icon-x" aria-hidden="true"><span class="hide">Close</span></span>
                      </button>
                      {{ settings.pdp_popup_content_2 | richtext }}
                    </div>
                  </div>
                {% endif %}
              {% endfor %}

              <script>
              function togglePopup(popupId, otherId) {
                var popup = document.getElementById(popupId);
                var other = document.getElementById(otherId);
                
                if (other) {
                  other.style.display = 'none';
                }

                if (popup) {
                  popup.style.display = popup.style.display === 'none' ? 'block' : 'none';
                }
              }
              </script>
            {%- when 'price' -%}
              <div class="no-js-hidden" id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                {%- render 'price',
                  product: product,
                  use_variant: true,
                  show_badges: true,
                  price_class: 'price--large'
                -%}
              </div>
              {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
                <div class="product__tax caption rte">
                  {%- if cart.taxes_included -%}
                    {{ 'products.product.include_taxes' | t }}
                  {%- endif -%}
                  {%- if shop.shipping_policy.body != blank -%}
                    {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                  {%- endif -%}
                </div>
              {%- endif -%}
              <div {{ block.shopify_attributes }}>
                {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                  <input type="hidden" name="id" value="{{ currentVariant.id }}">
                  {{ form | payment_terms }}
                {%- endform -%}
              </div>
            {%- when 'inventory' -%}
              <p
                class="product__inventory no-js-hidden{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if currentVariant.inventory_management != 'shopify' %} visibility-hidden{% endif %}"
                {{ block.shopify_attributes }}
                id="Inventory-{{ section.id }}"
                role="status"
              >
                {%- if currentVariant.inventory_management == 'shopify' -%}
                  {%- if currentVariant.inventory_quantity > 0 -%}
                    {%- if currentVariant.inventory_quantity <= block.settings.inventory_threshold -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(238,148,65, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(238,148,65)"/>
                      </svg>
                      {%- if block.settings.show_inventory_quantity -%}
                        {{- 'products.product.inventory_low_stock_show_count' | t: quantity: currentVariant.inventory_quantity -}}
                      {%- else -%}
                        {{- 'products.product.inventory_low_stock' | t -}}
                      {%- endif -%}
                    {%- else -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(62,214,96, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(62,214,96)"/>
                      </svg>
                      {%- if block.settings.show_inventory_quantity -%}
                        {{- 'products.product.inventory_in_stock_show_count' | t: quantity: currentVariant.inventory_quantity -}}
                      {%- else -%}
                          {{- 'products.product.inventory_in_stock' | t -}}
                      {%- endif -%}
                    {%- endif -%}
                  {%- else -%}
                    {%- if currentVariant.inventory_policy == 'continue' -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(62,214,96, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(62,214,96)"/>
                      </svg>
                      {{- 'products.product.inventory_out_of_stock_continue_selling' | t -}}
                    {%- else -%}
                      <svg width="15" height="15" aria-hidden="true">
                        <circle cx="7.5" cy="7.5" r="7.5" fill="rgb(200,200,200, 0.3)"/>
                        <circle cx="7.5" cy="7.5" r="5" stroke="rgb(255, 255, 255)" stroke-width="1" fill="rgb(200,200,200)"/>
                      </svg>
                      {{- 'products.product.inventory_out_of_stock' | t -}}
                    {%- endif -%}
                  {%- endif -%}
                {%- endif -%}
              </p>
            {%- when 'description' -%}
              {%- if product.description != blank -%}
                <div class="product__description rte quick-add-hidden" {{ block.shopify_attributes }}>
                  {% if product.handle == "gift-card" %}
                    How did you know? You picked my favorite.
                  {% else %}
                    <!-- DESCRIPTION TOP -->
                    {% assign descriptionOldTop = product.description | split: '*411*' | first  %}
                    {% assign descriptionTopHtml = descriptionOldTop
                      | split: '<div class="tabs">' | first
                      | remove: '<p>'
                      | remove: '</p>'
                      | remove: '<div class="description">' 
                      | remove: '<div>' 
                      | remove: '</div>' 
                      | remove: '<span>' 
                      | remove: '</span>' 
                      | remove: '<meta charset="utf-8">'
                      | replace: 'strong>', 'h2>'
                      | replace: 'b>', 'b>'
                      | strip_newlines
                    %}
                    {{ descriptionTopHtml }}
                    
                    {% if hasPacklink %}
                      <!-- I already know this: {{ productFamily }} -->
                      <span class="packlink">Create a custom <a href="/products/{{ productFamily }}-diy-2-pack" title="Create a custom {{ productTitle }} 2-Pack">2 Pack</a> -&gt;</span>
                    {% endif %}
                    
                  {% endif %}
                    
                  {% if hasHighlight %}
                    <div class="highlights">
                      <img src="{{ imgName | asset_img_url:'thumb' }}" data-src="{{ imgName | asset_img_url:'2048x' }}" class="lazyload" alt="{{ tag | remove: 'highlight ' }}" width="{{ imgName.width }}" height="{{ imgName.height }}"  />
                    </div>
                  {% endif %}
                </div>
              {%- endif -%}
            {%- when 'variant' -%}
              {% render 'product-variant-color', product: product, productColor: productColor, productFamily: productFamily, settings: settings, potentialNewColor: potentialNewColor, limitColors: limitColors, newColorSoon: newColorSoon, isLastChance: isLastChance %}
            {%- when 'sku' -%}
              <p
                class="product__sku no-js-hidden{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if currentVariant.sku.size == 0 %} visibility-hidden{% endif %}"
                id="Sku-{{ section.id }}"
                role="status"
                {{ block.shopify_attributes }}
              >
                <span class="visually-hidden">{{ 'products.product.sku' | t }}:</span> {{- currentVariant.sku -}}
              </p>
            {%- when 'custom_liquid' -%}
              {{ block.settings.custom_liquid }}
            {%- when 'collapsible_tab' -%}
              <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
                <details id="Details-{{ block.id }}-{{ section.id }}">
                  <summary>
                    <div class="summary__title">
                      {% render 'icon-accordion', icon: block.settings.icon %}
                      <h2 class="h4 accordion__title inline-richtext">
                        {{ block.settings.heading | default: block.settings.page.title }}
                      </h2>
                    </div>
                    {% render 'icon-caret' %}
                  </summary>
                  <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                    {{ block.settings.content }}
                    {{ block.settings.page.content }}
                  </div>
                </details>
              </div>
            {%- when 'quantity_selector' -%}
              <div
                id="Quantity-Form-{{ section.id }}"
                class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}"
                {{ block.shopify_attributes }}
              >
                {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                {% # theme-check-disable %}
                {%- assign cart_qty = cart | item_count_for_variant: currentVariant.id -%}
                {% # theme-check-enable %}
                <label class="quantity__label form__label" for="Quantity-{{ section.id }}">
                  {{ 'products.product.quantity.label' | t }}
                  <span class="quantity__rules-cart no-js-hidden{% if cart_qty == 0 %} hidden{% endif %}">
                    <span class="loading-overlay hidden">
                      <span class="loading-overlay__spinner">
                        <svg
                          aria-hidden="true"
                          focusable="false"
                          class="spinner"
                          viewBox="0 0 66 66"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                        </svg>
                      </span>
                    </span>
                    <span>({{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}})</span>
                  </span>
                </label>
                <quantity-input class="quantity">
                  <button class="quantity__button no-js-hidden" name="minus" type="button">
                    <span class="visually-hidden">
                      {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                    </span>
                    {% render 'icon-minus' %}
                  </button>
                  <input
                    class="quantity__input"
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    data-cart-quantity="{{ cart_qty }}"
                    data-min="{{ currentVariant.quantity_rule.min }}"
                    min="{{ currentVariant.quantity_rule.min }}"
                    {% if currentVariant.quantity_rule.max != null %}
                      data-max="{{ currentVariant.quantity_rule.max }}"
                      max="{{ currentVariant.quantity_rule.max }}"
                    {% endif %}
                    step="{{ currentVariant.quantity_rule.increment }}"
                    value="{{ currentVariant.quantity_rule.min }}"
                    form="{{ product_form_id }}"
                  />
                  <button class="quantity__button no-js-hidden" name="plus" type="button">
                    <span class="visually-hidden">
                      {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                    </span>
                    {% render 'icon-plus' %}
                  </button>
                </quantity-input>
                <div class="quantity__rules caption no-js-hidden">
                  {%- if currentVariant.quantity_rule.increment > 1 -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.multiples_of'
                        | t: quantity: currentVariant.quantity_rule.increment
                      -}}
                    </span>
                  {%- endif -%}
                  {%- if currentVariant.quantity_rule.min > 1 -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.minimum_of'
                        | t: quantity: currentVariant.quantity_rule.min
                      -}}
                    </span>
                  {%- endif -%}
                  {%- if currentVariant.quantity_rule.max != null -%}
                    <span class="divider">
                      {{-
                        'products.product.quantity.maximum_of'
                        | t: quantity: currentVariant.quantity_rule.max
                      -}}
                    </span>
                  {%- endif -%}
                </div>
              </div>
            {%- when 'popup' -%}
              <modal-opener
                class="product-popup-modal__opener no-js-hidden quick-add-hidden"
                data-modal="#PopupModal-{{ block.id }}"
                {{ block.shopify_attributes }}
              >
                <button
                  id="ProductPopup-{{ block.id }}"
                  class="product-popup-modal__button link"
                  type="button"
                  aria-haspopup="dialog"
                >
                  {{ block.settings.text | default: block.settings.page.title }}
                </button>
              </modal-opener>
              <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">
                {{- block.settings.text -}}
              </a>
            {%- when 'share' -%}
              {% assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin %}
              {% render 'share-button',
                block: block,
                share_link: share_url
              %}

            {%- when 'variant_picker' -%}
              {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id, currentVariant: currentVariant, has_single_available: has_single_available, no_single_variant: no_single_variant  %}
              {% unless product.type == "Gift Wrap" or product.title contains "Sock" %}
                <div class="display-block width-auto noteholder">
                  <div class="packtext-holder">
                    {% if hasPacks %}<p class="packtext">Buy more, save $</p>{% endif %}
                  </div>
                </div>
              {% endunless %}
            {%- when 'swatch' -%}
              {% render 'product-variant-swatch', product: product, block: block, product_form_id: product_form_id %}
            {%- when 'buy_buttons' -%}
              {%- render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, section_id: section.id, show_pickup_availability: true, currentVariant: currentVariant -%}
            {%- when 'rating' -%}
              <div class="review-summary">{% render 'okendo-reviews-product-rating-summary', product: product %}</div>
            {%- when 'complementary' -%}
              <product-recommendations class="complementary-products quick-add-hidden no-js-hidden{% if block.settings.make_collapsible_row %} is-accordion{% endif %}{% if block.settings.enable_quick_add %} complementary-products-contains-quick-add{% endif %}" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ block.settings.product_list_limit }}&intent=complementary">
                {%- if recommendations.performed and recommendations.products_count > 0 -%}
                  <aside aria-label="{{ 'accessibility.complementary_products' | t }}" {{ block.shopify_attributes }}{% if block.settings.make_collapsible_row %} class="product__accordion accordion"{% endif %}>
                    <div class="complementary-products__container">
                      {%- if block.settings.make_collapsible_row -%}
                        <details id="Details-{{ block.id }}-{{ section.id }}" open>
                          <summary>
                      {%- endif %}
                      <div class="summary__title">
                        {%- if block.settings.make_collapsible_row -%}
                          {% render 'icon-accordion', icon: block.settings.icon %}
                          <h2 class="h4 accordion__title">{{ block.settings.block_heading }}</h2>
                        {%- else -%}
                          <h2 class="h3 accordion__title">{{ block.settings.block_heading }}</h2>
                        {%- endif -%}
                      </div>
                      {%- if block.settings.make_collapsible_row -%}
                          {% render 'icon-caret' %}
                        </summary>
                      {%- endif -%}
                      <slideshow-component class="slider-mobile-gutter">
                        {%- assign number_of_slides = recommendations.products_count | plus: 0.0 | divided_by: block.settings.products_per_page | ceil -%}
                        <div id="Slider-{{ block.id }}" class="contains-card contains-card--product complementary-slider grid grid--1-col slider slider--everywhere" role="list"{% if number_of_slides > 1 %} aria-label="{{ 'general.slider.name' | t }}"{% endif %}>
                          {%- for i in (1..number_of_slides) -%}
                            <div id="Slide-{{ block.id }}-{{ forloop.index }}" class="complementary-slide complementary-slide--{{ settings.card_style }} grid__item slider__slide slideshow__slide" tabindex="-1" role="group"{% if number_of_slides > 1 %} aria-roledescription="{{ 'sections.slideshow.slide' | t }}" aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"{% endif %}>
                              <ul class="list-unstyled" role="list">
                                {%- for product in recommendations.products limit: block.settings.products_per_page offset: continue -%}
                                  <li>
                                    {% render 'card-product',
                                      card_product: product,
                                      media_aspect_ratio: block.settings.image_ratio,
                                      show_secondary_image: false,
                                      lazy_load: false,
                                      show_quick_add: block.settings.enable_quick_add,
                                      section_id: section.id,
                                      horizontal_class: true,
                                      horizontal_quick_add: true
                                    %}
                                  </li>
                                {%- endfor -%}
                              </ul>
                            </div>
                          {%- endfor -%}
                        </div>
                        {%- if number_of_slides > 1 -%}
                          <div class="slider-buttons no-js-hidden">
                            <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}">{% render 'icon-caret' %}</button>
                            <div class="slider-counter slider-counter--{{ block.settings.pagination_style }}{% if block.settings.pagination_style == 'counter' or block.settings.pagination_style == 'numbers' %} caption{% endif %}">
                              {%- if block.settings.pagination_style == 'counter' -%}
                                <span class="slider-counter--current">1</span>
                                <span aria-hidden="true"> / </span>
                                <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                                <span class="slider-counter--total">{{ number_of_slides }}</span>
                              {%- else -%}
                                <div class="slideshow__control-wrapper">
                                  {%- for i in (1..number_of_slides) -%}
                                    <button class="slider-counter__link slider-counter__link--{{ block.settings.pagination_style }} link" aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}" aria-controls="Slider-{{ block.id }}">
                                      {%- if block.settings.pagination_style == 'numbers' -%}{{ forloop.index }}{% else %}<span class="dot"></span>{%- endif -%}
                                    </button>
                                  {%- endfor -%}
                                </div>
                              {%- endif -%}
                            </div>
                            <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'general.slider.next_slide' | t }}">{% render 'icon-caret' %}</button>
                          </div>
                        {%- endif -%}
                      </slideshow-component>
                      {%- if block.settings.make_collapsible_row -%}
                        </details>
                      {%- endif -%}
                    </div>
                  </aside>
                {%- endif -%}
                {{ 'component-complementary-products.css' | asset_url | stylesheet_tag }}
                {%- if block.settings.enable_quick_add -%}
                  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
                  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
                {%- endif -%}
              </product-recommendations>
            {%- when 'icon-with-text' -%}
              {% render 'icon-with-text',
                block: block
              %}
            {%- when 'desc_with_accordion' -%}
              <div class="product-single__description bottom rte small--text-center" itemprop="description">

                {% comment %} <p class="promo-text{% if settings.pdp_promo_text contains "U.S." %} ge-hide{% endif %}"{% unless currentVariant.available %} style="display: none"{% endunless %}>{{ settings.pdp_promo_text }}</p> {% endcomment %}

                    {% if product.description contains "*411*" %}
                  {% assign descriptionHtml = product.description
                    | split: '*411*' | last 
                    | remove: '<p>'
                    | remove: '</p>'
                    | remove: '<div>' 
                    | remove: '</div>' 
                    | replace: '<ul>', '<div><ul>' 
                    | replace: '</ul>', '</ul></div>' 
                    | replace: '*FABRIC*', '<h3>Fabric + Care</h3>'
                    | replace: '<h3>Fabric + Care</h3><div>', '<h3>Fabric + Care</h3><div class="ui-accordion-content ui-widget-content" style="display: none;">'
                    | remove: '<span>' 
                    | remove: '</span>' 
                    | remove: '<meta charset="utf-8">'
                    | strip_newlines
                  %}
                  {% if sizechart.size > 0 %}
                    {% capture sizeChartLink %}<ul><li><a href="#{{ sizechart }}" class="size-here">Size Chart</a></li>{% endcapture %}
                    {% assign descriptionHtml = descriptionHtml
                       | replace_first: '<ul>', sizeChartLink 
                       | replace: '<li>Size Breakdown', '<li style="display:none">Size Breakdown' 
                       | replace: '<li>Sizing Breakdown', '<li style="display:none">Sizing Breakdown' 
                    %}
                  {% endif %}
                  {% capture descr %}
                    <div class="accordion">
                      {% if product.type == "Gift Wrap" %}
                        <h3 class="ui-accordion-header">Details</h3>
                        {{ descriptionHtml | replace: 'Fabric + Care', 'Material' }}
                      {% else %}
                        <h3 class="ui-accordion-header">Fit</h3>
                        {{ descriptionHtml }}
                        <h3 class="ui-accordion-header">FAQ</h3>
                        <div class="ui-accordion-content ui-widget-content" style="display: none;">
                          {% if settings.show_extra_faq_tab_bullet %}
                            <ul><li>{{ settings.faq_sale_bullet }}</li>
                            {{ settings.faq_tab | strip_newlines | split: '<ul>' | last }}
                          {% else %}
                            {{ settings.faq_tab | strip_newlines }}
                          {% endif %}
                        </div>
                      {% endif %}
                    </div>
                  {% endcapture %}
                  {{ descr }}
                {% else %}
                  <div class="original-style">
                    {{ product.description }}
                  </div>
                  <script type="text/javascript">
                    jQuery(document).ready(function($) {
                      $('.tabs').tabs().find('ul.ui-tabs-nav a').bind('click', function(e) {
                        e.preventDefault();
                      });
                    });
                  </script>
                {% endif %}     
              </div>
          {%- endcase -%}
        {%- endfor -%}
        <a href="{{ product.url }}" class="link product__view-details animate-arrow">
          {{ 'products.product.view_full_details' | t }}
          {% render 'icon-arrow' %}
        </a>
      </product-info>
      <div class="matching-set js-matching-set">
        {% assign matching_set_product = product.metafields.custom.matching_set.value %}
        
        {% if matching_set_product %}
          <h3 class="title-section">Complete the set ></h3>
          <div class="matching-set__container">
            <!-- Image on the left -->
            <div class="matching-set__image">
              <img
                src="{{ matching_set_product.featured_image | image_url: width: '300x' }}"
                alt="{{ matching_set_product.featured_image.alt }}" 
              />
            </div>
      
            <!-- Info on the right -->
            <div class="matching-set__info">
              <a href="{{ matching_set_product.url }}" class="matching-set__title">{{ matching_set_product.title }}</a>
              
              <div class="matching-set__price">
                {%- render 'price',
                  product: matching_set_product,
                  currentVariant: matching_set_product.variants.first,
                  use_variant: true
                -%}
              </div>
      
              <!-- Variants section with label on the left and variants on the right -->
              <div class="matching-set__variants">
                <div class="variant-label">Size</div>
                <div class="variant-options">
                  {% assign size_option_index = -1 %}
                  {% assign displayed_sizes = "" %} <!-- Initialize an empty string to track displayed sizes -->
      
                  <!-- Find the index of the "Size" option -->
                  {% for option in matching_set_product.options_with_values %}
                    {% if option.name == 'Size' %}
                      {% assign size_option_index = forloop.index0 %}
                      {% break %}
                    {% endif %}
                  {% endfor %}
      
                  {% if size_option_index != -1 %}
                    {% assign displayed_sizes = "" %}
                    {% for variant in matching_set_product.variants %}
                      {% assign size_value = variant.options[size_option_index] %}
                      {% assign size_and_type = size_value | append: variant.title %}
                      
                      <!-- Only display the "Single" variant for each size -->
                      {% if variant.available and size_and_type contains "Single"%}
                        <div class="variant-option">
                          <input type="radio" name="size" id="variant_{{ variant.id }}" value="{{ variant.id }}" data-variant-id="{{ variant.id }}" class="variant-selector">
                          <label for="variant_{{ variant.id }}">{{ size_value }}</label>
                        </div>
                        {% assign displayed_sizes = displayed_sizes | append: size_value %}
                      {% endif %}
                    {% endfor %}
                  {% else %}
                    <p>No sizes available.</p>
                  {% endif %}
                </div>
              </div>
            </div>
          </div>
      
          <!-- Add to Cart button positioned below the image and info -->
          <div class="matching-set__buttons">
            <button type="button" class="button button--full-width button--primary" id="add-to-cart-button" disabled>
              Select Size
            </button>
          </div>
        {% endif %}
      </div>
      
         
      
      <style>
        .matching-set {
        margin-top: -30px;
        }

        .matching-set .title-section {
          font-size: 36px;
        }
        .matching-set__container {
          display: flex;
          align-items: flex-start;
          justify-content: space-between;
          max-width: 800px;
        }

        .matching-set__container h3 {
          margin: 0px;
          padding: 0px;
          font-size: 36px;
        }
      
        .matching-set__image {
          flex: 1;
          margin-right: 20px;
        }
      
        .matching-set__image img {
          width: 100%;
          height: auto;
          display: block;
        }
      
        .matching-set__info {
          flex: 2;
        }
      
        .matching-set__title {
          font-size: 0.75em;
          font-weight: 400;
          line-height: 1;
          display: inline-block;
          margin-bottom: -4px;
        }
      
        .matching-set__price .price, .matching-set__price .price__regular .price-item--regular{
          margin-bottom: 15px;
          font-size: 14px !important;
          font-weight: 400 !important;
        }
      
        .matching-set__variants {
          display: flex;
          align-items: flex-start;
          margin-bottom: 20px;
        }
      
        .variant-label {
          flex: 1;
          font-weight: 400;
          margin-right: 10px;
          font-size: 14px;
          margin-top: 5px;
        }
      
        .variant-options {
          flex: 3;
          display: flex;
          flex-wrap: wrap;
          gap: 0px 5px;
        }
      
        .variant-option {
          display: inline-block;
        }
      
        .variant-option input {
          display: none;
        }
      
        .variant-option label {
          padding: 5px 11px;
          background-color: #F4F6F6;
          cursor: pointer;
          font-size: 11px;
          width: 34px;
          height: 24px;
          display: inline-block;
        }
      
        .variant-option input:checked + label {
          border: 1px solid #000;
          font-size: bold;
        }
      
        .matching-set__buttons {
          width: 100%;
          margin-top: 20px;
          max-width: 800px;
          margin: 20px auto 0;
        }
      
        .matching-set .button {
          display: block;
          width: 100%;
          padding: 10px 20px;
          text-align: center;
          border: none;
          cursor: pointer;
          font-size: 14px;
          text-transform: capitalize;
        }

        .matching-set__buttons .button:disabled {
          background-color: #525252;
          color: #fff;
          cursor: not-allowed;
          opacity: 0.7;
          text-transform: capitalize;
        }
        @media screen and (max-width: 768px) {
          .matching-set .title-section {
            font-size: 8.5vw !important;
          }
        }
      </style>   
      <script>
        jQuery(document).ready(function($) {
          $('#add-to-cart-button').prop('disabled', true);

          function handleVariantSelection() {
            var selectedVariantId = $('.variant-selector:checked').val();
            if (selectedVariantId) {
              $('#add-to-cart-button').text('Add To Cart').prop('disabled', false);
            } else {
              $('#add-to-cart-button').text('Select Size').prop('disabled', true);
            }
          }

          // Bind the change event for the variant selection
          $('.variant-selector').on('change', handleVariantSelection);

          // Initialize button state
          handleVariantSelection();
          // When the Add to Cart button is clicked
          $('#add-to-cart-button').on('click', function() {
            // Get the selected variant ID from the radio input
            var selectedVariantId = $('.variant-selector:checked').val();
      
            // Check if a variant is selected
            if (!selectedVariantId) {
              alert('Please select a size before adding to cart.');
              return;
            }
      
            // Prepare data for adding to cart
            var data = {
              id: selectedVariantId,
              quantity: 1 // Default quantity to add
            };
      
            // Send an AJAX request to add the item to the cart
            $.ajax({
              type: 'POST',
              url: '/cart/add.js',
              data: data,
              dataType: 'json',
              success: function(line_item) {
                // On success, update the cart and open the drawer
                ShopifyAPI.getCart(cartUpdateCallback);
              },
              error: function(XMLHttpRequest, textStatus) {
                // Handle errors
                var data = eval('(' + XMLHttpRequest.responseText + ')');
                if (data && data.message) {
                  alert(data.message + '(' + data.status + '): ' + data.description);
                } else {
                  alert('There was an error adding the item to the cart. Please try again.');
                }
              }
            });
          });
      
          // Callback function to update the cart and open the drawer
          function cartUpdateCallback(cart) {
            // Update cart count and cost
            updateCountPrice(cart);
      
            // Rebuild the cart in the drawer
            buildCart(cart);
      
            // Remove loading state and open the drawer
            $('body').removeClass('drawer--is-loading');
            $('body').trigger('ajaxCart.afterCartLoad', cart);
          }
      
          // Function to update cart count and cost
          function updateCountPrice(cart) {
            var $cartCountSelector = $('#cart-number');
            var $cartCostSelector = $('#cart-cost');
      
            if ($cartCountSelector) {
              $cartCountSelector.removeClass('cart-link__bubble--visible');
              if (cart.item_count > 0) {
                $cartCountSelector.addClass('cart-link__bubble--visible').text(cart.item_count);
              }
            }
      
            if ($cartCostSelector) {
              $cartCostSelector.html(Shopify.formatMoney(cart.total_price, Shopify.money_format));
            }
          }
      
          // Function to build/rebuild the cart in the drawer
          function buildCart(cart) {
            var $cartContainer = $('#CartContainer');
            var source = $("#CartTemplate").html();
            var template = Handlebars.compile(source);
            var items = [];
      
            // Prepare cart items for the template
            $.each(cart.items, function(index, cartItem) {
              var item = {
                key: cartItem.key,
                id: cartItem.variant_id,
                line: index + 1,
                url: cartItem.url,
                img: cartItem.image ? cartItem.image.replace(/(\.[^.]*)$/, "_200x300$1").replace('http:', '') : "//cdn.shopify.com/s/assets/admin/no-image-medium-cc9732cb976dd349a0df1d39816fbcc7.gif",
                name: cartItem.product_title,
                variation: cartItem.variant_title,
                properties: cartItem.properties,
                itemAdd: cartItem.quantity + 1, // Quantity increase button
                itemMinus: cartItem.quantity - 1, // Quantity decrease button
                itemQty: cartItem.quantity, // Correct quantity display
                price: Shopify.formatMoney(cartItem.price, Shopify.money_format),
                vendor: cartItem.vendor
              };
      
              items.push(item);
            });
      
            // Render the cart template
            var data = {
              items: items,
              totalPrice: Shopify.formatMoney(cart.total_price, Shopify.money_format)
            };
      
            $cartContainer.html(template(data));
      
            // Initialize quantity selectors for dynamic quantity management
            initializeQuantitySelectors();
          }
      
          // Function to initialize quantity selectors and manage their events
          function initializeQuantitySelectors() {
            // Add click event listeners for quantity adjust buttons
            $('.ajaxcart__qty-adjust').off('click').on('click', function() {
              var $el = $(this),
                  line = $el.data('line'),
                  $qtySelector = $el.siblings('.ajaxcart__qty-num'),
                  qty = parseInt($qtySelector.val().replace(/\D/g, ''));
      
              // Adjust quantity based on the button clicked (+ or -)
              if ($el.hasClass('ajaxcart__qty--plus')) {
                qty += 1;
              } else {
                qty -= 1;
                if (qty < 1) qty = 1; // Prevent quantity from going below 1
              }
      
              // Update the input field with the new quantity
              $qtySelector.val(qty);
      
              // Send an update request to Shopify
              updateQuantity(line, qty);
            });
      
            // Change event for direct input in quantity fields
            $('.ajaxcart__qty-num').off('change').on('change', function() {
              var $el = $(this),
                  line = $el.data('line'),
                  qty = parseInt($el.val().replace(/\D/g, ''));
      
              if (isNaN(qty) || qty < 1) {
                qty = 1; // Prevent invalid or zero quantity
              }
      
              // Update the quantity
              updateQuantity(line, qty);
            });
          }
      
          // Function to update quantity via Ajax
          function updateQuantity(line, qty) {
            $.ajax({
              type: 'POST',
              url: '/cart/change.js',
              data: { quantity: qty, line: line },
              dataType: 'json',
              success: function(cart) {
                // Rebuild the cart after updating quantity
                buildCart(cart);
              },
              error: function(XMLHttpRequest, textStatus) {
                alert('There was an error updating the cart. Please try again.');
              }
            });
          }
        });
      </script>

    {%- if section.settings.media_position == 'right' -%}
      {% comment %} Duplicate gallery to display after product content on tablet/desktop breakpoint {% endcomment %}
      <div class="grid__item product__media-wrapper small-hide">
        {% render 'product-media-gallery', variant_images: variant_images, is_duplicate: true %}
      </div>
    {%- endif -%}
  </div>


  {% render 'product-media-modal' variant_images: variant_images %}

  {% assign popups = section.blocks | where: 'type', 'popup' %}
  {%- for block in popups -%}
    <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
      <div
        role="dialog"
        aria-label="{{ block.settings.text }}"
        aria-modal="true"
        class="product-popup-modal__content"
        tabindex="-1"
      >
        <button
          id="ModalClose-{{ block.id }}"
          type="button"
          class="product-popup-modal__toggle"
          aria-label="{{ 'accessibility.close' | t }}"
        >
          {% render 'icon-close' %}
        </button>
        <div class="product-popup-modal__content-info">
          <h1 class="h2">{{ block.settings.page.title }}</h1>
          {{ block.settings.page.content }}
        </div>
      </div>
    </modal-dialog>
  {%- endfor -%}

  {%- if product.media.size > 0 -%}
    <script src="{{ 'product-modal.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- if first_3d_model -%}
    <script type="application/json" id="ProductJSON-{{ product.id }}">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>
  {%- endif -%}
  {% if newColorSoon != false %}            
    <div class="modal soon-modal" aria-modal="true" role="dialog">
      <div class="modal-content">
        <div class="closing-icon">
          <span class="close icon icon-x" aria-hidden="true"><span class="hide">Close</span></span>
        </div>
        <div class="clearfix">
          <p class="h2">New color launching soon</p>
          <p>Sign up to be first to know!</p>
          <div class="klaviyo-form-{{ newColorSoon }}"></div>
        </div>
      </div>
    </div>
  {% endif %}
  {% if sizechart.size > 0 %}
    <div id="sizing-modal" class="modal sizing-modal" aria-modal="true" aria-labelledby="sizing-modal-title" role="dialog">
      <div class="modal-content">
        <button class="closing-icon">
          <span class="close icon icon-x" aria-hidden="true"><span class="hide">Close</span></span>
        </button>
        <div class="clearfix">
          {% capture sizechartNote %}sizechart-note-{{ sizechart }}{% endcapture %}

          {% if sizeChartStyle == "html" %}
            <h2 id="sizing-modal-title">{{ sizeChartArticle.title }}</h2>
            {{ sizechartHtml }}
          {% else %}
            {% capture chartTitle %}{% if sizechart contains "nonwire" %}Non-Wire Bra{% elsif sizechart == "bratop" %}Bra Top{% elsif sizechart == "bottoms" %}Underwear{% elsif sizechart == "apparel" %}Apparel{% endif %} Sizing{% endcapture %}
            {% capture sizechartImg %}sizechart-{{ sizechart }}.png{% endcapture %}
            <h2 id="sizing-modal-title">{{ chartTitle }}</h2>
            <img src="{{ sizechartImg | asset_img_url: 'thumb' }}" data-src="{{ sizechartImg | asset_img_url: '2048x' }}" class="lazyload sizechart" alt="{{ chartTitle }} Size Chart" />
          {% endif %} 
          <!-- {{ sizechartNote }} -->
          {% if settings[sizechartNote].size > 0 %}
            {{ settings[sizechartNote ] }}
          {% endif %}
          <p>Q’s about sizing or fit? Email us at <a href="mailto:hello@negativeunderwear.com">hello@negativeunderwear.com</a></p>
        </div>
      </div>
    </div>
  {% endif %}
{% liquid
  assign sizerImage = product.images.first

  for image in product.images
    if image.alt == "flat"
      assign sizerImage = image
    endif 
  endfor
%}
<div class="sticky-add-to-cart js-sticky-add-to-cart">
  <div class="sticky-add-to-cart__info">
    {% comment %} <img
      src="{{ product.featured_image | image_url: width: '100x' }}"
      alt="{{ product.featured_image.alt }}"
    /> {% endcomment %}
    
    <div class="sticky-add-to-cart__info-content">
      <span>{{ product.title }}</span>

      {%- render 'price',
        product: product,
        currentVariant: currentVariant,
        use_variant: true
      -%}
    </div>
    <div class="sticky-add-to-cart__buttons">
      {% liquid
        if currentVariant.quantity_rule.min > currentVariant.inventory_quantity and check_against_inventory
          assign quantity_rule_soldout = true
        endif
      %}
      <button
        type="button"
        class="sticky-add-to-cart__open-variants product-form__submit button button--full-width button--primary"
        {% if currentVariant.available == false %}hidden{% endif %}
        avaiable="{{ currentVariant.available }}"
      >
        {{ 'products.product.add_to_cart' | t }}
      </button>
      
        <a
          href="#ProductInfo-{{ section.id }}"
          class="main-product-redirect-js product-form__submit button button--full-width button--primary"
          {% if currentVariant.available %}hidden{% endif %}
        >
          {{ 'products.product.sold_out' | t }}
        </a>
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when 'buy_buttons' -%}
            {%- render 'buy-buttons'
              block: block,
              product: product,
              product_form_id: product_form_id,
              section_id: section.id,
              show_pickup_availability: true,
              currentVariant: currentVariant,
              hidden_price: true,
              is_sticky: true
            -%}
        {%- endcase %}
      {%- endfor %}
    </div>
  </div>

  <div class="sticky-add-to-cart__variants">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when 'variant_picker' -%}
          {% render 'product-variant-picker',
            product: product,
            block: block,
            product_form_id: product_form_id,
            currentVariant: currentVariant,
            has_single_available: has_single_available,
            no_single_variant: no_single_variant,
            is_sticky: true
          %}
      {%- endcase %}
    {%- endfor %}
  </div>
</div>

<!-- sizer product image: -->
<img src="{{ sizerImage.src | img_url: '480x480' }}" id="ProductPhotoImg" class="hide" alt="Detail view of {{ product.title }} for sizer" />
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      if (Tools.mediaQuery('(max-width: 991px)')) {
        Tools.makeSticky(
          '.js-product',
          '.js-sticky-add-to-cart',
          () => {
            Tools.toggle({
              target: '.js-sticky-add-to-cart'
            })
          }
        )

        Tools.toggle({
          control: '.sticky-add-to-cart__open-variants',
          target: '.js-sticky-add-to-cart'
        })
      }

      function isIE() {
        const ua = window.navigator.userAgent;
        const msie = ua.indexOf('MSIE ');
        const trident = ua.indexOf('Trident/');

        return msie > 0 || trident > 0;
      }

      if (!isIE()) return;
      const hiddenInput = document.querySelector('#{{ product_form_id }} input[name="id"]');
      const noScriptInputWrapper = document.createElement('div');
      const variantSwitcher =
        document.querySelector('variant-radios[data-section="{{ section.id }}"]') ||
        document.querySelector('variant-selects[data-section="{{ section.id }}"]');
      noScriptInputWrapper.innerHTML = document.querySelector(
        '.product-form__noscript-wrapper-{{ section.id }}'
      ).textContent;
      variantSwitcher.outerHTML = noScriptInputWrapper.outerHTML;

      document.querySelector('#Variants-{{ section.id }}').addEventListener('change', function (event) {
        hiddenInput.value = event.currentTarget.value;
      });
    });
  </script>

  {%- liquid
    if currentVariant.featured_media
      assign seo_media = currentVariant.featured_media
    else
      assign seo_media = product.featured_media
    endif
  -%}

  <script type="application/ld+json">
    {
      "@context": "http://schema.org/",
      "@type": "Product",
      "name": {{ product.title | json }},
      "url": {{ request.origin | append: product.url | json }},
      {% if seo_media -%}
        "image": [
          {{ seo_media | image_url: width: 1920 | prepend: "https:" | json }}
        ],
      {%- endif %}
      "description": {{ product.description | strip_html | json }},
      {% if currentVariant.sku != blank -%}
        "sku": {{ currentVariant.sku | json }},
      {%- endif %}
      "brand": {
        "@type": "Brand",
        "name": {{ product.vendor | json }}
      },
      "offers": [
        {%- for variant in product.variants -%}
          {
            "@type" : "Offer",
            {%- if variant.sku != blank -%}
              "sku": {{ variant.sku | json }},
            {%- endif -%}
            {%- if variant.barcode.size == 12 -%}
              "gtin12": {{ variant.barcode }},
            {%- endif -%}
            {%- if variant.barcode.size == 13 -%}
              "gtin13": {{ variant.barcode }},
            {%- endif -%}
            {%- if variant.barcode.size == 14 -%}
              "gtin14": {{ variant.barcode }},
            {%- endif -%}
            "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
            "price" : {{ variant.price | divided_by: 100.00 | json }},
            "priceCurrency" : {{ cart.currency.iso_code | json }},
            "url" : {{ request.origin | append: variant.url | json }}
          }{% unless forloop.last %},{% endunless %}
        {%- endfor -%}
      ]
    }
  </script>
  {{ 'option_selection.min.js' | asset_url | script_tag }}
  <script type="text/javascript">
    var _learnq = _learnq || [];

    var item = {
      Name: {{ product.title|json }},
      ProductID: {{ product.id|json }},
      Categories: {{ product.collections|map:'title'|json }},
      ImageURL: "https:{{ product.featured_image.src|img_url:'grande' }}",
      URL: "{{ shop.secure_url }}{{ product.url }}",
      Brand: {{ product.vendor|json }},
      Price: {{ product.price|money|json }},
      CompareAtPrice: {{ product.compare_at_price_max|money|json }}
    };

    _learnq.push(['track', 'Viewed Product', item]);
    _learnq.push(['trackViewedItem', {
      Title: item.Name,
      ItemId: item.ProductID,
      Categories: item.Categories,
      ImageUrl: item.ImageURL,
      Url: item.URL,
      Metadata: {
        Brand: item.Brand,
        Price: item.Price,
        CompareAtPrice: item.CompareAtPrice
      }
    }]);
    jQuery(document).ready(function($) {
    $('.swatch-holder').hover(
      function() {  // over
        var swatchColor = $('.swatch', this).data('color');
        $('#MainContent strong.product-color').html(swatchColor);
      },
      function() {  // out
        var swatchCurrentColor = $('#MainContent .swatch-holder.current .swatch').data('color');
        $('#MainContent strong.product-color').html(swatchCurrentColor);
      }
    );

    //images
    var $productImageWrapper = $('.thumbnail-list .thumbnail-list__item');
    var modelNavs = ["All"];
    var modelCount = 0;
    $productImageWrapper.each( function (idx, el) {
      var $img = $(el).find('img');
      var imageAlt = $img.attr('alt');
      var altHasModel = false;
      var modelExisted = false;
      var modelClass;

      if (imageAlt.indexOf('[') != -1) {
        altHasModel = true;
        var altParts = imageAlt.split('[');
        imageAlt = altParts[0];
        $img.attr('alt', imageAlt);
  
        var modelParts = altParts[1].split(']');
        modelAlt = modelParts[0].replace(' ', ',&nbsp;');
  
        modelClass = modelAlt.replace(' ', '-').replace('/', '-').replace('&nbsp;', '-').replace(',', '').replace('+', 'plus').toLowerCase();
        $img.attr('data-model', modelClass);
  
        for (var i=0; i<modelNavs.length; i++) {
          if (modelNavs[i] == modelAlt) {
            modelExisted = true;
          }
        }
        if (!modelExisted) {
          modelCount++;
          $('.modelnav').append('<li data-model="' + modelClass + '">' + modelAlt + '</li>');
        
          if (modelCount > 1)
            $('.modelnav').css('opacity', 1);

          modelNavs.push(modelAlt);
        }
      }
      $(el).addClass(modelClass);
    });
  })
  </script>
</section>

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section js-product",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "variant",
      "name": "Color swatch",
      "limit": 1
    },
    {
      "type": "swatch",
      "name": "Swatch",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "sku",
      "name": "t:sections.main-product.blocks.sku.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.sku.settings.text_style.label"
        }
      ]
    },
    {
      "type": "inventory",
      "name": "t:sections.main-product.blocks.inventory.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "label": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.label",
          "min": 0,
          "max": 100,
          "step": 1,
          "info": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.info",
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_inventory_quantity",
          "label": "t:sections.main-product.blocks.inventory.settings.show_inventory_quantity.label",
          "default": true
        }
      ]
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": false,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible row",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    }, 
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "desc_with_accordion",
      "name": "Description & accordion",
      "limit": 1
    },
    {
      "type": "complementary",
      "name": "t:sections.main-product.blocks.complementary_products.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.complementary_products.settings.paragraph.content"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "Pairs well with",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "checkbox",
          "id": "make_collapsible_row",
          "default": false,
          "label": "t:sections.main-product.blocks.complementary_products.settings.make_collapsible_row.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "price_tag",
          "info": "t:sections.main-product.blocks.complementary_products.settings.icon.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 10,
          "label": "t:sections.main-product.blocks.complementary_products.settings.product_list_limit.label"
        },
        {
          "type": "range",
          "id": "products_per_page",
          "min": 1,
          "max": 4,
          "step": 1,
          "default": 3,
          "label": "t:sections.main-product.blocks.complementary_products.settings.products_per_page.label"
        },
        {
          "type": "select",
          "id": "pagination_style",
          "options": [
            {
              "value": "dots",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_1"
            },
            {
              "value": "counter",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_2"
            },
            {
              "value": "numbers",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_3"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.label",
          "default": "counter"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.complementary_products.settings.product_card.heading"
        },
        {
          "type": "select",
          "id": "image_ratio",
          "options": [
            {
              "value": "portrait",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_1"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_2"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.label",
          "default": "square"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_add",
          "label": "t:sections.main-product.blocks.complementary_products.settings.enable_quick_add.label",
          "default": false
        }
      ]
    },
    {
      "type": "icon-with-text",
      "name": "t:sections.main-product.blocks.icon_with_text.name",
      "settings": [
        {
          "type": "select",
          "id": "layout",
          "options": [
            {
              "value": "horizontal",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__1.label"
            },
            {
              "value": "vertical",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__2.label"
            }
          ],
          "default": "horizontal",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.label"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.content.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.content.info"
        },
        {
          "type": "select",
          "id": "icon_1",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_1.label"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_1.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_1",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_2",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "return",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_2.label"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_2.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_2",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_3",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "truck",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_3.label"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_3.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_3",
          "default": "Heading",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__4.label"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "select",
      "id": "media_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.main-product.settings.media_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.main-product.settings.media_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.main-product.settings.media_position.label",
      "info": "t:sections.main-product.settings.media_position.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
