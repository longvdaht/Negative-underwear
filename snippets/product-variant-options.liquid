{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.


  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
  %}
{% endcomment %}
{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'

  assign product_form_id = 'product-form-' | append: section.id
  assign single_disabled = false
  assign optionValue = option.values
  if option.name == "Cup"
    assign optionValue = option.values | sort_natural
  endif 
  assign option_selected = currentVariant.options[index]
-%}
{% comment %}
 product variant cup === position 2 
{% endcomment %}
<ul class="custom-variant__size-{{index}}">
  {% assign counter = 0 %}
  {% for variant in product.variants %}
    {% if option.name == "Size" and variant.option3 and variant.option3 == "Single" %}
      <li data-size="{{ counter }}" data-qty="{{ variant.option3 }}" data-id="{{ section.id }}-{{ option.position }}-{{ counter }}" class="size-variant hide-active-load {% unless variant.available %}disabled{% endunless %}"></li>
      {% assign counter = counter | plus: 1 %}
    {% endif %}
  {% endfor %}
</ul>
{%- for value in optionValue -%}
  {% assign isUnavailableVariant = false %}
  {% if  option.name == "Cup" %}
    {% assign isUnavailableVariant = true %}
    {% for variant in product.variants %}
      {% if variant.option1 == currentVariant.options[0] and variant.option3 == currentVariant.options[2] and value == variant.options[1] %}
         {% assign isUnavailableVariant = false %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == currentVariant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == currentVariant.option1 and variants_option2_arr[forloop.index0] == currentVariant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif

      endcase
    endfor
  -%}
  {% if option.name == 'Quantity' and option_disabled and value == 'Single' %}
    {% assign single_disabled = true %}
  {% endif %}
  
  {% assign quantity_option = product.options_by_name['Quantity'].values.size %}
  {% unless quantity_option <= 1 %}
    {% unless no_single_variant %}
      {% unless has_single_available %}
        {% assign single_disabled = true %}
      {% endunless %}
    {% endunless %}
  {% endunless %}

  {% assign valueLabel = value %}
  {% comment %}
    {% if option.name == 'Size' and product.tags contains "Plus Bra Sizing" %}
      {% if value contains '+' %}
        {% assign valueLabel = 'DDD/G' | append: value %}
      {% else %}
        {% assign valueLabel = 'A-DD' | append: value %}
      {% endif %}
    {% endif %}
  {% endcomment %}
  {%- if block.settings.picker_type == 'button' -%}
    {% if is_sticky %}

      <input
        type="hidden"
        id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}-1-1"
        name="{{ option.name }}"
        value="{{ value | escape }}"
        form="{{ product_form_id }}"
        class="{% if option_disabled or single_disabled %}disabled{% endif %}{% if isUnavailableVariant %} hide{% endif %}{% if option.name == 'Size' or option.name == 'Band' or option.name == 'Cup' %} hide-active-load{% endif %}"
        {% if option_selected == value %}
          data-active="true"
        {% endif %}
      >

      <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
        {{ valueLabel -}}
        <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
      </label>
    {% else %}
      <input
        type="radio"
        id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
        name="{{ option.name }}"
        value="{{ value | escape }}"
        form="{{ product_form_id }}"
        class="{% if option_disabled or single_disabled %}disabled{% endif %}{% if isUnavailableVariant %} hide{% endif %}{% if option.name == 'Size' or option.name == 'Band' or option.name == 'Cup' %} hide-active-load{% endif %}"
        {% if option_selected == value %}
          checked
        {% endif %}
      >
      <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
        {{ valueLabel -}}
        <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
      </label>
    {% endif %}

  {%- elsif block.settings.picker_type == 'dropdown' -%}
    <option
      value="{{ value | escape }}"
      {% if option_selected == value %}
        selected="selected"
      {% endif %}{% if option_disabled or single_disabled %} class="value-disabled"{% endif %}
    >
        {{- valueLabel -}}
    </option>
  {%- endif -%}
{%- endfor -%}

<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function() {
    const radioSizeInputs = document.querySelectorAll('input[type="radio"][name="Size"]');
    const radioBandInputs = document.querySelectorAll('input[type="radio"][name="Band"]');
    const radioCupInputs = document.querySelectorAll('input[type="radio"][name="Cup"]');
    const sizeVariants = document.querySelectorAll('product-info fieldset .custom-variant__size-0 li');
    radioSizeInputs.forEach((radioInput, index) => {
      const radioId = radioInput.id;
      
      const sizeVariantsEl = document.querySelector('.custom-variant__size-0 li[data-id= ' + radioId + ']');
      if (sizeVariantsEl) {
        radioInput.className = sizeVariantsEl.className;
      }
    });
    
    if (radioSizeInputs.length > 1) {
      disabledOption(radioSizeInputs);
      console.log(radioSizeInputs.length);
    } else if (radioBandInputs.length > 1 && radioCupInputs.length > 1) {
      disabledOption(radioBandInputs, radioCupInputs);
    } else {
      showAddCart();
    }

    function showAddCart() {
      const addToCart = document.querySelector('.product-form__buttons .AddToCart.product-form__submit');
      let btnText = addToCart.querySelector('span').innerHTML;
      if (!btnText.includes('Sold Out')) {
        addToCart.disabled = false;
      }
      addToCart.classList.remove('select-size-load');
      addToCart.parentElement.classList.remove('need-select-size');
    }
  });

  function disabledOption(option1, option2 = []) {
    const addToCartBtn = document.querySelector('.product-form__buttons .AddToCart.product-form__submit');
    addToCartBtn.disabled = true;

    if (option2.length >= 1) {
      // Disable the add to cart button initially
      addToCartBtn.disabled = true;
    }

    function disableButton() {
      let btnText = addToCartBtn.querySelector('span').innerHTML;
      if (!btnText.includes('Sold Out')) {
        addToCartBtn.disabled = false;
      }
      addToCartBtn.classList.remove('select-size-load');
      addToCartBtn.parentElement.classList.remove('need-select-size');
    }

    function showWaitList() {
      addToCartBtn.parentElement.classList.remove('need-select-size');
    }
  
    // Add event listeners to each radio input
    option1.forEach(function(input) {
      input.addEventListener('change', function(e) {
        let opitonDisable = document.querySelector('.product-form__input input[type="radio"].hide-active-load:checked');
        input.classList.remove('hide-active-load');;
        if (!opitonDisable && !input.classList.contains('disabled')) {
          disableButton();
        }

        if (input.classList.contains('disabled')) {
          showWaitList();
        }

        if (e.target.value) {
          const stickyfieldset = document.querySelector(`.js-sticky-add-to-cart input[type="hidden"][name="Size"][value="${e.target.value}"]`)
          const variantStickyfieldset = [...document.querySelectorAll('.js-sticky-add-to-cart .js.product-form__input input[type="hidden"][name="Size"]')]
  
          if (!variantStickyfieldset.length) return
  
          variantStickyfieldset.forEach(item => {
            if (item.hasAttribute('data-active') && item.getAttribute('data-active') === 'true') {
              item.setAttribute('data-active', 'false')
            }
          })

          if (stickyfieldset) stickyfieldset.setAttribute('data-active', 'true')
        }
      });

      input.addEventListener('click', function() {
        let opitonDisable = document.querySelector('.product-form__input input[type="radio"].hide-active-load:checked');
        input.classList.remove('hide-active-load');;
        if (!opitonDisable && !input.classList.contains('disabled')) {
          disableButton();
        }
        if (input.classList.contains('disabled')) {
          showWaitList();
        }
      });
    });

    option2.forEach(function(input) {
      input.addEventListener('change', function() {
        let opitonDisable = document.querySelector('.product-form__input input[type="radio"].hide-active-load:checked');
        input.classList.remove('hide-active-load');;
        if (!opitonDisable && !input.classList.contains('disabled')) {
          disableButton();
        }
        if (input.classList.contains('disabled')) {
          showWaitList();
        }
      });

      input.addEventListener('click', function() {
        let opitonDisable = document.querySelector('.product-form__input input[type="radio"].hide-active-load:checked');
        input.classList.remove('hide-active-load');;
        if (!opitonDisable && !input.classList.contains('disabled')) {
          disableButton();
        }
        if (input.classList.contains('disabled')) {
          showWaitList();
        }
      });
    });
  }
</script>

<style>
  .product-form__input input[type="radio"][name="Size"].hide-active-load + label {
    border: 1px solid #F4F6F6;
    font-weight: 400;
  }

  .product-form__input input[type="radio"][name="Band"].hide-active-load + label {
    border: 1px solid #F4F6F6;
    font-weight: 400;
  }

  .product-form__input input[type="radio"][name="Cup"].hide-active-load + label {
    border: 1px solid #F4F6F6;
    font-weight: 400;
  }
</style>
